name: Build Rust Images

on:
  push:
    branches: [ main ]
    paths: [ rust/** ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * 0'

env:
  wrk_dir: './rust/'
  img: 'harmless/rust:'

jobs:
  build:
    strategy:
      matrix:
        include:
          - tag: alpine-latest
            context: ./alpine
          - tag: alpine-3.15
            context: ./alpine/3.15
          - tag: alpine-3.14
            context: ./alpine/3.14
          - tag: debian-latest
            context: ./debian
          - tag: debian-bullseye-slim
            context: ./debian/bullseye/slim
          - tag: debian-buster
            context: ./debian/buster
          - tag: debian-buster-slim
            context: ./debian/buster/slim
          - tag: ubuntu-latest
            context: ./ubuntu
          - tag: ubuntu-focal
            context: ./ubuntu/focal
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get Rust Version
        run: |
          echo "rust_version=$(rustc -vV | grep '^release: ' | cut -c 10-)" >> $GITHUB_ENV
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker Login
        uses: docker/login-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.wrk_dir }}${{ matrix.context }}
          push: ${{ github.event_name != 'pull_request' }}
          no-cache: true
          pull: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.img }}${{ matrix.tag }},${{ env.img }}${{ env.rust_version }}-${{ matrix.tag }}
