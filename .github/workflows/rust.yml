name: harmlesstech/rust

on:
  push:
    branches: [ main ]
    paths: [ .github/workflows/rust.yml, rust/** ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 0'

env:
  img: harmlesstech/rust

defaults:
  run:
    working-directory: ./rust

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.check.outputs.version }}
      build: ${{ steps.check.outputs.build }}
    steps:
      - uses: actions/checkout@v3
      - name: Update rust
        run: rustup update
      - uses: ahmadnassri/action-workflow-queue@v1
        with:
          timeout: 10800000
      - uses: actions/cache@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          path: |
            vstore.cache
          key: docker-${{ env.img }}-${{ secrets.CACHE_VERSION }}
      - name: Check and Configure
        id: check
        run: |
          ../check.py $(rustc -vV | grep '^release: ' | cut -c 10-)

  build:
    needs: [ check ]
    if: ${{ check.outputs.build == 'true' }}
    env:
      VERSION: ${{ needs.check.outputs.version }}
    strategy:
      matrix:
        arch: [ amd64, arm64, riscv64, ppc64le, s390x, 386, mips64le, mips64, arm/v7 ]
        distro: [ debian:latest:bullseye, debian:buster, alpine:latest:3.16, alpine:3.15, alpine:3.14 ]
    runs-on: ubuntu-latest
    steps:
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 10
      - uses: actions/checkout@v3
      - name: Generate Dockerfile and Tags
        run: echo tags=$(./gen.py ${{ matrix.arch }} ${{ matrix.distro }} ${{ env.img }}) ${{ env.VERSION }}
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker Login
        uses: docker/login-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        if: ${{ env.tags != 'None' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          no-cache: true
          pull: true
          platforms: linux/${{ matrix.arch }}
          tags: ${{ env.tags }}
